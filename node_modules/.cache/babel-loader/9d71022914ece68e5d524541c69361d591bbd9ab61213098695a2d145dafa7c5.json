{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { useBulkSelectionData, useHandleBulkSelection } from '../../utilities/index-provider/hooks.js';\nimport { IndexContext, IndexRowContext, IndexSelectionChangeContext } from '../../utilities/index-provider/context.js';\nfunction IndexProvider(_ref) {\n  let {\n    children,\n    resourceName: passedResourceName,\n    loading,\n    onSelectionChange,\n    selectedItemsCount = 0,\n    itemCount,\n    hasMoreItems,\n    condensed,\n    selectable: isSelectableIndex = true\n  } = _ref;\n  const {\n    paginatedSelectAllText,\n    bulkActionsLabel,\n    bulkActionsAccessibilityLabel,\n    resourceName,\n    selectMode,\n    bulkSelectState\n  } = useBulkSelectionData({\n    selectedItemsCount,\n    itemCount,\n    hasMoreItems,\n    resourceName: passedResourceName\n  });\n  const handleSelectionChange = useHandleBulkSelection({\n    onSelectionChange\n  });\n  const contextValue = useMemo(() => ({\n    itemCount,\n    selectMode: selectMode && isSelectableIndex,\n    selectable: isSelectableIndex,\n    resourceName,\n    loading,\n    paginatedSelectAllText,\n    hasMoreItems,\n    bulkActionsLabel,\n    bulkActionsAccessibilityLabel,\n    bulkSelectState,\n    selectedItemsCount,\n    condensed\n  }), [itemCount, selectMode, isSelectableIndex, resourceName, loading, paginatedSelectAllText, hasMoreItems, bulkActionsLabel, bulkActionsAccessibilityLabel, bulkSelectState, selectedItemsCount, condensed]);\n  const rowContextValue = useMemo(() => ({\n    selectable: isSelectableIndex,\n    selectMode: selectMode && isSelectableIndex,\n    condensed\n  }), [condensed, selectMode, isSelectableIndex]);\n  return /*#__PURE__*/React.createElement(IndexContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(IndexRowContext.Provider, {\n    value: rowContextValue\n  }, /*#__PURE__*/React.createElement(IndexSelectionChangeContext.Provider, {\n    value: handleSelectionChange\n  }, children)));\n}\nexport { IndexProvider };","map":{"version":3,"names":["React","useMemo","useBulkSelectionData","useHandleBulkSelection","IndexContext","IndexRowContext","IndexSelectionChangeContext","IndexProvider","_ref","children","resourceName","passedResourceName","loading","onSelectionChange","selectedItemsCount","itemCount","hasMoreItems","condensed","selectable","isSelectableIndex","paginatedSelectAllText","bulkActionsLabel","bulkActionsAccessibilityLabel","selectMode","bulkSelectState","handleSelectionChange","contextValue","rowContextValue","createElement","Provider","value"],"sources":["/Users/jonaslemueldatu/node_modules/@shopify/polaris/build/esm/components/IndexProvider/IndexProvider.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { useBulkSelectionData, useHandleBulkSelection } from '../../utilities/index-provider/hooks.js';\nimport { IndexContext, IndexRowContext, IndexSelectionChangeContext } from '../../utilities/index-provider/context.js';\n\nfunction IndexProvider({\n  children,\n  resourceName: passedResourceName,\n  loading,\n  onSelectionChange,\n  selectedItemsCount = 0,\n  itemCount,\n  hasMoreItems,\n  condensed,\n  selectable: isSelectableIndex = true\n}) {\n  const {\n    paginatedSelectAllText,\n    bulkActionsLabel,\n    bulkActionsAccessibilityLabel,\n    resourceName,\n    selectMode,\n    bulkSelectState\n  } = useBulkSelectionData({\n    selectedItemsCount,\n    itemCount,\n    hasMoreItems,\n    resourceName: passedResourceName\n  });\n  const handleSelectionChange = useHandleBulkSelection({\n    onSelectionChange\n  });\n  const contextValue = useMemo(() => ({\n    itemCount,\n    selectMode: selectMode && isSelectableIndex,\n    selectable: isSelectableIndex,\n    resourceName,\n    loading,\n    paginatedSelectAllText,\n    hasMoreItems,\n    bulkActionsLabel,\n    bulkActionsAccessibilityLabel,\n    bulkSelectState,\n    selectedItemsCount,\n    condensed\n  }), [itemCount, selectMode, isSelectableIndex, resourceName, loading, paginatedSelectAllText, hasMoreItems, bulkActionsLabel, bulkActionsAccessibilityLabel, bulkSelectState, selectedItemsCount, condensed]);\n  const rowContextValue = useMemo(() => ({\n    selectable: isSelectableIndex,\n    selectMode: selectMode && isSelectableIndex,\n    condensed\n  }), [condensed, selectMode, isSelectableIndex]);\n  return /*#__PURE__*/React.createElement(IndexContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(IndexRowContext.Provider, {\n    value: rowContextValue\n  }, /*#__PURE__*/React.createElement(IndexSelectionChangeContext.Provider, {\n    value: handleSelectionChange\n  }, children)));\n}\n\nexport { IndexProvider };\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,oBAAoB,EAAEC,sBAAsB,QAAQ,yCAAyC;AACtG,SAASC,YAAY,EAAEC,eAAe,EAAEC,2BAA2B,QAAQ,2CAA2C;AAEtH,SAASC,aAAaA,CAAAC,IAAA,EAUnB;EAAA,IAVoB;IACrBC,QAAQ;IACRC,YAAY,EAAEC,kBAAkB;IAChCC,OAAO;IACPC,iBAAiB;IACjBC,kBAAkB,GAAG,CAAC;IACtBC,SAAS;IACTC,YAAY;IACZC,SAAS;IACTC,UAAU,EAAEC,iBAAiB,GAAG;EAClC,CAAC,GAAAX,IAAA;EACC,MAAM;IACJY,sBAAsB;IACtBC,gBAAgB;IAChBC,6BAA6B;IAC7BZ,YAAY;IACZa,UAAU;IACVC;EACF,CAAC,GAAGtB,oBAAoB,CAAC;IACvBY,kBAAkB;IAClBC,SAAS;IACTC,YAAY;IACZN,YAAY,EAAEC;EAChB,CAAC,CAAC;EACF,MAAMc,qBAAqB,GAAGtB,sBAAsB,CAAC;IACnDU;EACF,CAAC,CAAC;EACF,MAAMa,YAAY,GAAGzB,OAAO,CAAC,OAAO;IAClCc,SAAS;IACTQ,UAAU,EAAEA,UAAU,IAAIJ,iBAAiB;IAC3CD,UAAU,EAAEC,iBAAiB;IAC7BT,YAAY;IACZE,OAAO;IACPQ,sBAAsB;IACtBJ,YAAY;IACZK,gBAAgB;IAChBC,6BAA6B;IAC7BE,eAAe;IACfV,kBAAkB;IAClBG;EACF,CAAC,CAAC,EAAE,CAACF,SAAS,EAAEQ,UAAU,EAAEJ,iBAAiB,EAAET,YAAY,EAAEE,OAAO,EAAEQ,sBAAsB,EAAEJ,YAAY,EAAEK,gBAAgB,EAAEC,6BAA6B,EAAEE,eAAe,EAAEV,kBAAkB,EAAEG,SAAS,CAAC,CAAC;EAC7M,MAAMU,eAAe,GAAG1B,OAAO,CAAC,OAAO;IACrCiB,UAAU,EAAEC,iBAAiB;IAC7BI,UAAU,EAAEA,UAAU,IAAIJ,iBAAiB;IAC3CF;EACF,CAAC,CAAC,EAAE,CAACA,SAAS,EAAEM,UAAU,EAAEJ,iBAAiB,CAAC,CAAC;EAC/C,OAAO,aAAanB,KAAK,CAAC4B,aAAa,CAACxB,YAAY,CAACyB,QAAQ,EAAE;IAC7DC,KAAK,EAAEJ;EACT,CAAC,EAAE,aAAa1B,KAAK,CAAC4B,aAAa,CAACvB,eAAe,CAACwB,QAAQ,EAAE;IAC5DC,KAAK,EAAEH;EACT,CAAC,EAAE,aAAa3B,KAAK,CAAC4B,aAAa,CAACtB,2BAA2B,CAACuB,QAAQ,EAAE;IACxEC,KAAK,EAAEL;EACT,CAAC,EAAEhB,QAAQ,CAAC,CAAC,CAAC;AAChB;AAEA,SAASF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}