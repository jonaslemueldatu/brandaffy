{"ast":null,"code":"import * as React from 'react';\n\n/*\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * React useInterval Hook\n * Used to integrate the power of setInterval seamlessly\n *\n * @param callback - The callback function\n * @param delay - The amount of delay in minutes.\n *\n * @returns the ref of setInterval\n */\nfunction useInterval(callback, delay) {\n  var savedCallback = React.useRef(callback);\n  var intervalRef = React.useRef(null);\n  // Remember the latest callback if it changes.\n  React.useEffect(function () {\n    savedCallback.current = callback;\n  }, [callback]);\n  // Set up the interval.\n  React.useEffect(function () {\n    var tick = function tick() {\n      return savedCallback.current();\n    };\n    if (typeof delay === 'number') {\n      intervalRef.current = window.setInterval(tick, delay * 60 * 1000);\n    }\n    return function () {\n      if (intervalRef.current) {\n        window.clearTimeout(intervalRef.current);\n      }\n    };\n  }, [delay]);\n  return intervalRef;\n}\nexport { useInterval };","map":null,"metadata":{},"sourceType":"module"}