{"ast":null,"code":"import _slicedToArray from \"/Users/jonaslemueldatu/Desktop/Brandaffy.io/brandaffy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jonaslemueldatu/Desktop/Brandaffy.io/brandaffy/src/sections/Dashboardplansettings.js\";\n// props: \n// id: email to be queried to get user plan\n\nimport React from 'react';\nimport '../styles/sections/Dashboardplansettings.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nfunction Dashboardplansettings(props) {\n  var _this = this;\n  var _useState = useState({\n      plan: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    userplan = _useState2[0],\n    setUserplan = _useState2[1];\n  var _useState3 = useState({\n      influencer: ['free', 'starter', 'growth'],\n      influencer_price: [0, 4.99, 9.99],\n      influencer_number_campaigns: [3, 7, 15]\n    }),\n    _useState4 = _slicedToArray(_useState3, 1),\n    plans = _useState4[0];\n  useEffect(function () {\n    axios.get(\"\".concat(process.env.REACT_APP_ROUTE, \"/api/global/getplansettings\"), {\n      params: {\n        email: props.id\n      }\n    }).then(function (res) {\n      setUserplan(res.data.user_plan);\n    }).catch(function (err) {\n      return alert(err);\n    });\n  }, [props.id]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"plansettings-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"plansettings-container-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Subscription\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"plansettings-container-subscription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }), plans.influencer.map(function (plan, index) {\n    return /*#__PURE__*/React.createElement(\"th\", {\n      key: index,\n      className: userplan.plan.toUpperCase() === plan.toUpperCase() ? \"active\" : \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 37\n      }\n    }, plan), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plansettings-plan-price\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 37\n      }\n    }, \"$\", plans.influencer_price[index]), /*#__PURE__*/React.createElement(\"button\", {\n      className: userplan.plan.toUpperCase() === plan.toUpperCase() ? \"active\" : \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 37\n      }\n    }, \" \", userplan.plan.toUpperCase() === plan.toUpperCase() ? \"Your Plan\" : \"Change plan\"));\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, \"Active campaigns\")), plans.influencer_number_campaigns.map(function (campaign, index) {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      key: index,\n      className: userplan.influencer_active_campaigns === campaign ? \"active\" : \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, campaign, \" \", userplan.influencer_active_campaigns === campaign && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plansettings-plan-left\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 188\n      }\n    }, userplan.influencer_active_campaigns_left, \" left\"));\n  }))))));\n}\nexport default Dashboardplansettings;","map":{"version":3,"names":["React","useState","useEffect","axios","Dashboardplansettings","props","_this","_useState","plan","_useState2","_slicedToArray","userplan","setUserplan","_useState3","influencer","influencer_price","influencer_number_campaigns","_useState4","plans","get","concat","process","env","REACT_APP_ROUTE","params","email","id","then","res","data","user_plan","catch","err","alert","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","index","key","toUpperCase","campaign","influencer_active_campaigns","influencer_active_campaigns_left"],"sources":["/Users/jonaslemueldatu/Desktop/Brandaffy.io/brandaffy/src/sections/Dashboardplansettings.js"],"sourcesContent":["// props: \n// id: email to be queried to get user plan\n\nimport React from 'react'\nimport '../styles/sections/Dashboardplansettings.css'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nfunction Dashboardplansettings(props) {\n\n    const [userplan, setUserplan] = useState({\n        plan: \"\"\n    })\n    const [plans] = useState({\n        influencer: ['free', 'starter', 'growth'],\n        influencer_price: [0, 4.99, 9.99],\n        influencer_number_campaigns: [3, 7, 15],\n    })\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_ROUTE}/api/global/getplansettings`, {\n            params: {\n                email: props.id\n            }\n        }).then((res) => {\n            setUserplan(res.data.user_plan)\n        }).catch(err => alert(err))\n    }, [props.id])\n\n\n    return (\n        <div className='plansettings-container'>\n            <div className='plansettings-container-title'>Subscription</div>\n            <div className='plansettings-container-subscription'>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                            </th>\n                            {plans.influencer.map((plan, index) => (\n                                <th key = { index } className = { userplan.plan.toUpperCase() === plan.toUpperCase() ? \"active\" : \"\" } >\n                                    <div>{plan}</div>\n                                    <div className='plansettings-plan-price'>${plans.influencer_price[index]}</div>\n                                    <button className={userplan.plan.toUpperCase() === plan.toUpperCase() ? \"active\" : \"\"}> {userplan.plan.toUpperCase() === plan.toUpperCase() ? \"Your Plan\" : \"Change plan\"}</button>\n                                </th>\n                            ))}\n                    </tr>\n                    <tr>\n                        <td>\n                            <span>Active campaigns</span>\n                        </td>\n                        {plans.influencer_number_campaigns.map((campaign, index) => (\n                            <td key={index} className={userplan.influencer_active_campaigns === campaign ? \"active\" : \"\"}>{campaign} {userplan.influencer_active_campaigns === campaign && <div className='plansettings-plan-left'>{userplan.influencer_active_campaigns_left} left</div>}</td>\n                        ))}\n                    </tr>\n                </tbody>\n            </table>\n\n        </div>\n        </div >\n    )\n}\n\nexport default Dashboardplansettings"],"mappings":"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"},"metadata":{},"sourceType":"module"}