{"ast":null,"code":"var _jsxFileName = \"/Users/jonaslemueldatu/Desktop/Brandaffy.io/brandaffy/src/sections/Dashboardplansettings.js\",\n  _s = $RefreshSig$();\n// props: \n// id: email to be queried to get user plan\n\nimport React from 'react';\nimport '../styles/sections/Dashboardplansettings.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboardplansettings(props) {\n  _s();\n  const [userplan, setUserplan] = useState(\"\");\n  const [planindex] = useState(0);\n  const [plans] = useState({\n    influencer: ['free', 'starter', 'growth'],\n    influencer_price: [0, 4.99, 9.99],\n    influencer_number_campaigns: [3, 7, 15],\n    brand: ['free', 'basic', 'advanced', 'beyond']\n  });\n  const [getlink] = useState(props.Type === 'Affiliate' ? 'getplansettings' : 'getbrandplansettings');\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_ROUTE}/api/global/${getlink}`, {\n      params: {\n        email: props.id\n      }\n    }).then(res => {\n      setUserplan(res.data.user_plan.plan);\n    }).catch(err => alert(err));\n  }, [props.id, getlink]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plansettings-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plansettings-container-title\",\n      children: \"Subscription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plansettings-container-subscription\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), plans.influencer.map((plan, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: userplan.localeCompare(plan, undefined, {\n                sensitivity: 'accent'\n              }) ? \"\" : \"active\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [plan, \" \", userplan]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"plansettings-plan-price\",\n                children: [\"$\", plans.influencer_price[index]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: userplan.localeCompare(plan, undefined, {\n                  sensitivity: 'accent'\n                }) ? \"\" : \"active\",\n                children: \"Change plan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Active campaigns\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), plans.influencer_number_campaigns.map((campaign, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: planindex === index ? \"active\" : \"\",\n              children: [campaign, \" \", planindex === index && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"plansettings-plan-left\",\n                children: \"(Hello World)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 132\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboardplansettings, \"k6LDH6rurQQSxozTdRvRd4m93dw=\");\n_c = Dashboardplansettings;\nexport default Dashboardplansettings;\nvar _c;\n$RefreshReg$(_c, \"Dashboardplansettings\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboardplansettings","props","_s","userplan","setUserplan","planindex","plans","influencer","influencer_price","influencer_number_campaigns","brand","getlink","Type","get","process","env","REACT_APP_ROUTE","params","email","id","then","res","data","user_plan","plan","catch","err","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","localeCompare","undefined","sensitivity","campaign","_c","$RefreshReg$"],"sources":["/Users/jonaslemueldatu/Desktop/Brandaffy.io/brandaffy/src/sections/Dashboardplansettings.js"],"sourcesContent":["// props: \n// id: email to be queried to get user plan\n\nimport React from 'react'\nimport '../styles/sections/Dashboardplansettings.css'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nfunction Dashboardplansettings(props) {\n\n    const [userplan, setUserplan] = useState(\"\")\n    const [planindex] = useState(0)\n    const [plans] = useState({\n        influencer: ['free', 'starter', 'growth'],\n        influencer_price: [0, 4.99, 9.99],\n        influencer_number_campaigns: [3, 7, 15],\n        brand: ['free', 'basic', 'advanced', 'beyond']\n    })\n    const [getlink] = useState(props.Type === 'Affiliate' ? 'getplansettings' : 'getbrandplansettings')\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_ROUTE}/api/global/${getlink}`, {\n            params: {\n                email: props.id\n            }\n        }).then((res) => {\n            setUserplan(res.data.user_plan.plan)\n        }).catch(err => alert(err))\n    }, [props.id, getlink])\n\n    return (\n        <div className='plansettings-container'>\n            <div className='plansettings-container-title'>Subscription</div>\n            <div className='plansettings-container-subscription'>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                            </th>\n                            {plans.influencer.map((plan, index) => (\n                                <th key={index} className={userplan.localeCompare(plan, undefined, { sensitivity: 'accent' }) ? \"\" : \"active\"}>\n                                    <div>{plan} {userplan}</div>\n                                    <div className='plansettings-plan-price'>${plans.influencer_price[index]}</div>\n                                    <button className={userplan.localeCompare(plan, undefined, { sensitivity: 'accent' }) ? \"\" : \"active\"}>Change plan</button>\n                                </th>\n                            ))}\n                        </tr>\n                        <tr>\n                            <td>\n                                <span>Active campaigns</span>\n                            </td>\n                            {plans.influencer_number_campaigns.map((campaign, index) => (\n                                <td key={index} className={planindex === index ? \"active\" : \"\"}>{campaign} {planindex === index && <div className='plansettings-plan-left'>(Hello World)</div>}</td>\n                            ))}\n                        </tr>\n                    </tbody>\n                </table>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboardplansettings"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}