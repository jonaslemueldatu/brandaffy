{"ast":null,"code":"import { __assign } from '../_virtual/_tslib.js';\nimport { ActionType } from './actions.js';\n\n/**\n * Auth Reducer\n * Used in auth state\n * @param state\n * @param action\n */\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case ActionType.SignIn:\n      return __assign(__assign({}, state), {\n        auth: action.payload.auth,\n        refresh: action.payload.refresh,\n        userState: action.payload.userState,\n        isSignIn: true\n      });\n    case ActionType.SignOut:\n      return __assign(__assign({}, state), {\n        auth: null,\n        refresh: null,\n        userState: null,\n        isSignIn: false\n      });\n    case ActionType.RefreshToken:\n      if (state.isSignIn && state.auth && state.refresh) {\n        return __assign(__assign({}, state), {\n          auth: {\n            token: action.payload.newAuthToken ? action.payload.newAuthToken : state.auth.token,\n            type: state.auth.type,\n            expiresAt: action.payload.newAuthTokenExpireIn ? new Date(new Date().getTime() + action.payload.newAuthTokenExpireIn * 60 * 1000) : state.auth.expiresAt\n          },\n          refresh: {\n            token: action.payload.newRefreshToken ? action.payload.newRefreshToken : state.refresh.token,\n            expiresAt: action.payload.newRefreshTokenExpiresIn ? new Date(new Date().getTime() + action.payload.newRefreshTokenExpiresIn * 60 * 1000) : state.refresh.expiresAt\n          },\n          userState: action.payload.newAuthUserState ? action.payload.newAuthUserState : state.userState\n        });\n      } else {\n        return state;\n      }\n  }\n}\n// Helper functions\n/**\n * used to make sign in\n * @param signInParams\n */\nfunction doSignIn(signInParams) {\n  return {\n    type: ActionType.SignIn,\n    payload: signInParams\n  };\n}\n/**\n * used to refresh the Token\n * @param refreshTokenParam\n */\nfunction doRefresh(refreshTokenParam) {\n  return {\n    type: ActionType.RefreshToken,\n    payload: refreshTokenParam\n  };\n}\n/**\n * Used to make sign out\n */\nfunction doSignOut() {\n  return {\n    type: ActionType.SignOut\n  };\n}\nexport { authReducer, doRefresh, doSignIn, doSignOut };","map":null,"metadata":{},"sourceType":"module"}