{"ast":null,"code":"import * as React from 'react';\nimport { useLocation, Navigate } from 'react-router-dom';\nimport AuthContext from './AuthContext.js';\nimport { doSignOut } from './utils/reducers.js';\nimport { AuthKitError } from './errors.js';\nimport { isAuthenticated } from './utils/utils.js';\n\n/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview PrivateRoute component\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Private Route for Components\n *\n * @remarks\n * This Component is based on {@link https://reactrouter.com/web/api/Route | reactrouter.Route}.\n * So you need to install react-route-dom before use it\n *\n * @param props\n */\nvar RequireAuth = function RequireAuth(_a) {\n  var children = _a.children,\n    loginPath = _a.loginPath;\n  var context = React.useContext(AuthContext);\n  if (context === null) {\n    throw new AuthKitError('Auth Provider is missing. ' + 'Please add the AuthProvider before Router');\n  }\n  var location = useLocation();\n  if (!isAuthenticated(context.authState)) {\n    // Redirect them to the /login page, but save the current location they\n    // were trying to go to when they were redirected. This allows us to\n    // send them along to that page after they login, which is a nicer\n    // user experience than dropping them off on the home page.\n    context.dispatch(doSignOut());\n    return React.createElement(Navigate, {\n      to: loginPath,\n      state: {\n        from: location\n      },\n      replace: true\n    });\n  }\n  return children;\n};\nexport { RequireAuth as default };","map":null,"metadata":{},"sourceType":"module"}