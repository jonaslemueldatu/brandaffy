{"ast":null,"code":"var _jsxFileName = \"/Users/jonaslemueldatu/Desktop/Brandaffy.io/brandaffy/src/sections/Dashboardplansettings.js\",\n  _s = $RefreshSig$();\n// props: \n// id: email to be queried to get user plan\n\nimport React from 'react';\nimport '../styles/sections/Dashboardplansettings.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboardplansettings(props) {\n  _s();\n  const [userplan, setUserplan] = useState({\n    plan: \"\"\n  });\n  const [plans] = useState({\n    influencer: ['free', 'starter', 'growth'],\n    influencer_price: [0, 4.99, 9.99],\n    influencer_number_campaigns: [3, 7, 15]\n  });\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_ROUTE}/api/global/getplansettings`, {\n      params: {\n        email: props.id\n      }\n    }).then(res => {\n      setUserplan(res.data.user_plan);\n    }).catch(err => alert(err));\n  }, [props.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plansettings-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plansettings-container-title\",\n      children: \"Subscription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plansettings-container-subscription\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), plans.influencer.map((plan, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: userplan.plan.toUpperCase() === plan.toUpperCase() ? \"active\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: plan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"plansettings-plan-price\",\n                children: [\"$\", plans.influencer_price[index]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: userplan.plan.toUpperCase() === plan.toUpperCase() ? \"active\" : \"\",\n                children: [\" \", userplan.plan.toUpperCase() === plan.toUpperCase() ? \"Your Plan\" : \"Change plan\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Active campaigns\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this), plans.influencer_number_campaigns.map((campaign, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: userplan.influencer_active_campaigns === campaign ? \"active\" : \"\",\n              children: [campaign, \" \", userplan.influencer_active_campaigns === campaign && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"plansettings-plan-left\",\n                children: [userplan.influencer_active_campaigns_left, \" left\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 188\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboardplansettings, \"TcEwdRtZrAaSsuAoJlU5qtPBegM=\");\n_c = Dashboardplansettings;\nexport default Dashboardplansettings;\nvar _c;\n$RefreshReg$(_c, \"Dashboardplansettings\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboardplansettings","props","_s","userplan","setUserplan","plan","plans","influencer","influencer_price","influencer_number_campaigns","get","process","env","REACT_APP_ROUTE","params","email","id","then","res","data","user_plan","catch","err","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","toUpperCase","campaign","influencer_active_campaigns","influencer_active_campaigns_left","_c","$RefreshReg$"],"sources":["/Users/jonaslemueldatu/Desktop/Brandaffy.io/brandaffy/src/sections/Dashboardplansettings.js"],"sourcesContent":["// props: \n// id: email to be queried to get user plan\n\nimport React from 'react'\nimport '../styles/sections/Dashboardplansettings.css'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nfunction Dashboardplansettings(props) {\n\n    const [userplan, setUserplan] = useState({\n        plan: \"\"\n    })\n    const [plans] = useState({\n        influencer: ['free', 'starter', 'growth'],\n        influencer_price: [0, 4.99, 9.99],\n        influencer_number_campaigns: [3, 7, 15],\n    })\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_ROUTE}/api/global/getplansettings`, {\n            params: {\n                email: props.id\n            }\n        }).then((res) => {\n            setUserplan(res.data.user_plan)\n        }).catch(err => alert(err))\n    }, [props.id])\n\n\n    return (\n        <div className='plansettings-container'>\n            <div className='plansettings-container-title'>Subscription</div>\n            <div className='plansettings-container-subscription'>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                            </th>\n                            {plans.influencer.map((plan, index) => (\n                                <th key = { index } className = { userplan.plan.toUpperCase() === plan.toUpperCase() ? \"active\" : \"\" } >\n                                    <div>{plan}</div>\n                                    <div className='plansettings-plan-price'>${plans.influencer_price[index]}</div>\n                                    <button className={userplan.plan.toUpperCase() === plan.toUpperCase() ? \"active\" : \"\"}> {userplan.plan.toUpperCase() === plan.toUpperCase() ? \"Your Plan\" : \"Change plan\"}</button>\n                                </th>\n                            ))}\n                    </tr>\n                    <tr>\n                        <td>\n                            <span>Active campaigns</span>\n                        </td>\n                        {plans.influencer_number_campaigns.map((campaign, index) => (\n                            <td key={index} className={userplan.influencer_active_campaigns === campaign ? \"active\" : \"\"}>{campaign} {userplan.influencer_active_campaigns === campaign && <div className='plansettings-plan-left'>{userplan.influencer_active_campaigns_left} left</div>}</td>\n                        ))}\n                    </tr>\n                </tbody>\n            </table>\n\n        </div>\n        </div >\n    )\n}\n\nexport default Dashboardplansettings"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}